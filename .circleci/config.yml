---
version: 2.1

stdenv: &stdenv
  environment:
    CONTAINER_RUNTIME: docker
    IMAGE: docker.io/saschagrunert/kubernix:latest
    LOCAL_IMAGE: &local_image image.tar

executors:
  container:
    docker:
      - image: &image nixos/nix
    <<: *stdenv

  container-musl:
    docker:
      - image: ekidd/rust-musl-builder:stable
    <<: *stdenv

  machine:
    machine:
      image: ubuntu-1604:201903-01
    <<: *stdenv


workflows:
  version: 2
  pipeline:
    jobs:
      - build
      - build-release
      - build-static
      - build-image
      - deploy-image:
          requires:
            - build-image
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - build-static
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v.*/
      - docs
      - docs-publish:
          requires:
            - docs
          filters:
            branches:
              only: master
      - lint-clippy
      - lint-rustfmt
      - machine-run:
          name: test-e2e-local-single-node
          cache: v10
          run: make test-e2e ARGS=local_single_node
          requires:
            - build-release
      - machine-run:
          name: test-integration-docker-single-node
          cache: v11
          run: |
            docker load -i $LOCAL_IMAGE
            make test-integration ARGS=docker_single_node
          requires:
            - build-image
      - machine-run:
          name: test-integration-podman-single-node
          cache: v12
          run: |
            sudo podman load -i $LOCAL_IMAGE
            sudo podman tag localhost/saschagrunert/kubernix:latest $IMAGE
            make test-integration ARGS=podman_single_node
          requires:
            - build-image
      - machine-run:
          name: test-integration-podman-multi-node
          cache: v13
          run: |
            sudo podman load -i $LOCAL_IMAGE
            sudo podman tag localhost/saschagrunert/kubernix:latest $IMAGE
            make test-integration ARGS=podman_multi_node
          requires:
            - build-image
      - machine-run:
          name: test-integration-local-multi-node
          cache: v14
          run: make test-integration ARGS=local_multi_node
          requires:
            - build-release
      - machine-run:
          name: test-integration-local-single-node
          cache: v15
          run: make test-integration ARGS=local_single_node
          requires:
            - build-release
      - machine-run:
          name: test-unit
          cache: v16
          run: |
            make coverage
            bash <(curl -s https://codecov.io/bash)

prepare-env: &prepare-env
  run:
    name: Install dependencies
    command: |
      apk add bash ca-certificates curl file findutils git jq make openssh

static-binary: &static-binary target/x86_64-unknown-linux-musl/release/kubernix

jobs:
  build:
    executor: container
    steps:
      - <<: *prepare-env
      - checkout
      - restore_cache:
          keys:
            - v1-build-{{ checksum "nix/nixpkgs.json" }}-{{ checksum "Cargo.lock" }}
      - run:
          name: build
          command: make
      - save_cache:
          key: v1-build-{{ checksum "nix/nixpkgs.json" }}-{{ checksum "Cargo.lock" }}
          paths:
            - /nix
            - target
            - ~/.cargo

  build-release:
    executor: container
    steps:
      - <<: *prepare-env
      - checkout
      - restore_cache:
          keys:
            - v1-build-release-{{ checksum "nix/nixpkgs.json" }}-{{ checksum "Cargo.lock" }}
      - run:
          name: build release
          command: make build-release
      - persist_to_workspace:
          root: .
          paths:
            - target/release/kubernix
      - save_cache:
          key: v1-build-release-{{ checksum "nix/nixpkgs.json" }}-{{ checksum "Cargo.lock" }}
          paths:
            - /nix
            - target
            - ~/.cargo

  build-static:
    executor: container-musl
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-build-release-static-{{ checksum "Cargo.lock" }}
      - run:
          name: build static release
          command: cargo build --release
      - save_cache:
          key: v1-build-release-static-{{ checksum "Cargo.lock" }}
          paths:
            - target
            - ~/.cargo
      - persist_to_workspace:
          root: .
          paths:
            - *static-binary
      - store_artifacts:
          path: *static-binary

  deploy:
    executor: container
    steps:
      - <<: *prepare-env
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Deploy static release
          command: |
            ID=$(curl https://$GITHUB_TOKEN:@api.$SLUG/latest | jq .id)
            curl -H "Authorization: token $GITHUB_TOKEN" \
                 -H "Content-Type: $(file -b --mime-type $FILE)" \
                 --data-binary @$FILE \
                 "https://uploads.$SLUG/$ID/assets?name=$(basename $FILE)"
          environment:
            FILE: *static-binary
            SLUG: github.com/repos/saschagrunert/kubernix/releases

  deploy-image:
    executor: machine
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Load the image
          command: docker load -i $LOCAL_IMAGE
      - run:
          name: Login to registry
          command: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run:
          name: Push the image
          command: docker push $IMAGE

  build-image:
    executor: machine
    steps:
      - checkout
      - run:
          name: Build the image
          command: make build-image
      - run:
          name: Save the image
          command: docker save $IMAGE -o $LOCAL_IMAGE
      - persist_to_workspace:
          root: .
          paths:
            - *local_image

  docs:
    executor: container
    steps:
      - <<: *prepare-env
      - checkout
      - restore_cache:
          keys:
            - v1-docs-{{ checksum "nix/nixpkgs.json" }}-{{ checksum "Cargo.lock" }}
      - run:
          name: documentation
          command: make docs
      - save_cache:
          key: v1-docs-{{ checksum "nix/nixpkgs.json" }}-{{ checksum "Cargo.lock" }}
          paths:
            - target
      - persist_to_workspace:
          root: .
          paths:
            - target/doc

  docs-publish:
    executor: container
    steps:
      - <<: *prepare-env
      - add_ssh_keys:
          fingerprints:
            - eb:6f:46:b8:ee:6f:17:76:9d:aa:91:39:e6:37:de:4c
      - checkout
      - run:
          name: Setup git
          command: |
            git config --global user.email mail@saschagrunert.de
            git config --global user.name "CircleCI"
      - attach_workspace:
          at: .
      - run:
          name: Deploy documentation
          command: |
            git fetch origin gh-pages
            git checkout -f gh-pages
            rm -rf doc
            mv target/doc .
            git add .
            git diff-index --quiet HEAD || git commit -m 'Update documentation'
            git push -f origin gh-pages

  lint-clippy:
    executor: container
    steps:
      - <<: *prepare-env
      - checkout
      - restore_cache:
          keys:
            - v1-lint-clippy-{{ checksum "nix/nixpkgs.json" }}-{{ checksum "Cargo.lock" }}
      - run:
          name: clippy
          command: make lint-clippy
      - save_cache:
          key: v1-lint-clippy-{{ checksum "nix/nixpkgs.json" }}-{{ checksum "Cargo.lock" }}
          paths:
            - /nix
            - target
            - ~/.cargo

  lint-rustfmt:
    executor: container
    steps:
      - <<: *prepare-env
      - checkout
      - restore_cache:
          keys:
            - v1-lint-rustfmt-{{ checksum "nix/nixpkgs.json" }}-{{ checksum "Cargo.lock" }}
      - run:
          name: rustfmt
          command: make lint-rustfmt
      - save_cache:
          key: v1-lint-rustfmt-{{ checksum "nix/nixpkgs.json" }}-{{ checksum "Cargo.lock" }}
          paths:
            - /nix
            - target
            - ~/.cargo

  machine-run:
    executor: machine
    parameters:
      run:
        type: string
      cache:
        type: string
    steps:
      - checkout
      - run:
          name: Prepare cache dir
          command: |
            sudo mkdir /nix
            sudo chown $(id -u):$(id -g) /nix
      - restore_cache:
          keys:
            - << parameters.cache >>-machine-run-{{ checksum "nix/nixpkgs.json" }}-{{ checksum "Cargo.lock" }}
      - attach_workspace:
          at: .
      - run:
          name: Install podman
          command: |
            sudo add-apt-repository -y ppa:projectatomic/ppa
            sudo apt-get update -y
            sudo apt-get install -y podman
      - run:
          name: Install Nix
          command: curl https://nixos.org/nix/install | sh
      - run:
          name: Run the tests
          command: |
            sudo hostnamectl set-hostname test
            . $HOME/.nix-profile/etc/profile.d/nix.sh
            sudo ln -s $HOME/.nix-profile/bin/nix /usr/bin
            sudo contrib/prepare-system.sh
            << parameters.run >>
            sudo chown -R $(id -u):$(id -g) /nix
      - save_cache:
          key: << parameters.cache >>-machine-run-{{ checksum "nix/nixpkgs.json" }}-{{ checksum "Cargo.lock" }}
          paths:
            - /nix
            - target
            - ~/.cargo

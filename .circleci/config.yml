---
version: 2.1

executors:
  container:
    docker:
      - image: &image nixos/nix
  container-musl:
    docker:
      - image: ekidd/rust-musl-builder:stable
  machine:
    machine:
      docker_layer_caching: true
      image: ubuntu-1604:201903-01

workflows:
  version: 2
  pipeline:
    jobs:
      - build
      - build-release
      - build-static
      - deploy:
          requires:
            - build-static
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v.*/
      - docs
      - docs-publish:
          requires:
            - docs
          filters:
            branches:
              only: master
      - lint-clippy
      - lint-rustfmt
      - test

prepare-env: &prepare-env
  run:
    name: Install dependencies
    command: |
      apk add bash ca-certificates curl file findutils git jq make openssh

static-binary: &static-binary target/x86_64-unknown-linux-musl/release/kubernix

jobs:
  build:
    executor: container
    steps:
      - <<: *prepare-env
      - checkout
      - restore_cache:
          keys:
            - v1-build-{{ checksum "nix/nixpkgs.json" }}-{{ checksum "Cargo.lock" }}
      - run:
          name: build
          command: make
      - save_cache:
          key: v1-build-{{ checksum "nix/nixpkgs.json" }}-{{ checksum "Cargo.lock" }}
          paths:
            - /nix
            - target
            - ~/.cargo

  build-release:
    executor: container
    steps:
      - <<: *prepare-env
      - checkout
      - restore_cache:
          keys:
            - v1-build-release-{{ checksum "nix/nixpkgs.json" }}-{{ checksum "Cargo.lock" }}
      - run:
          name: build release
          command: make build-release
      - save_cache:
          key: v1-build-release-{{ checksum "nix/nixpkgs.json" }}-{{ checksum "Cargo.lock" }}
          paths:
            - /nix
            - target
            - ~/.cargo

  build-static:
    executor: container-musl
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-build-release-static-{{ checksum "Cargo.lock" }}
      - run:
          name: build static release
          command: cargo build --release
      - save_cache:
          key: v1-build-release-static-{{ checksum "Cargo.lock" }}
          paths:
            - target
            - ~/.cargo
      - persist_to_workspace:
          root: .
          paths:
            - *static-binary
      - store_artifacts:
          path: *static-binary

  deploy:
    executor: container
    steps:
      - <<: *prepare-env
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Deploy static release
          command: |
            ID=$(curl https://$GITHUB_TOKEN:@api.$SLUG/latest | jq .id)
            curl -H "Authorization: token $GITHUB_TOKEN" \
                 -H "Content-Type: $(file -b --mime-type $FILE)" \
                 --data-binary @$FILE \
                 "https://uploads.$SLUG/$ID/assets?name=$(basename $FILE)"
          environment:
            FILE: *static-binary
            SLUG: github.com/repos/saschagrunert/kubernix/releases

  docs:
    executor: container
    steps:
      - <<: *prepare-env
      - checkout
      - restore_cache:
          keys:
            - v1-doc-{{ checksum "nix/nixpkgs.json" }}-{{ checksum "Cargo.lock" }}
      - run:
          name: documentation
          command: make docs
      - save_cache:
          key: v1-doc-{{ checksum "nix/nixpkgs.json" }}-{{ checksum "Cargo.lock" }}
          paths:
            - target
      - persist_to_workspace:
          root: .
          paths:
            - target/doc

  docs-publish:
    executor: container
    steps:
      - <<: *prepare-env
      - add_ssh_keys:
          fingerprints:
            - eb:6f:46:b8:ee:6f:17:76:9d:aa:91:39:e6:37:de:4c
      - checkout
      - run:
          name: Setup git
          command: |
            git config --global user.email mail@saschagrunert.de
            git config --global user.name "CircleCI"
      - attach_workspace:
          at: .
      - run:
          name: Deploy documentation
          command: |
            git fetch origin gh-pages
            git checkout -f gh-pages
            rm -rf doc
            mv target/doc .
            git add .
            git diff-index --quiet HEAD || git commit -m 'Update documentation'
            git push -f origin gh-pages

  lint-clippy:
    executor: container
    steps:
      - <<: *prepare-env
      - checkout
      - restore_cache:
          keys:
            - v1-lint-clippy-{{ checksum "nix/nixpkgs.json" }}-{{ checksum "Cargo.lock" }}
      - run:
          name: clippy
          command: make lint-clippy
      - save_cache:
          key: v1-lint-clippy-{{ checksum "nix/nixpkgs.json" }}-{{ checksum "Cargo.lock" }}
          paths:
            - /nix
            - target
            - ~/.cargo

  lint-rustfmt:
    executor: container
    steps:
      - <<: *prepare-env
      - checkout
      - restore_cache:
          keys:
            - v1-lint-rustfmt-{{ checksum "nix/nixpkgs.json" }}-{{ checksum "Cargo.lock" }}
      - run:
          name: rustfmt
          command: make lint-rustfmt
      - save_cache:
          key: v1-lint-rustfmt-{{ checksum "nix/nixpkgs.json" }}-{{ checksum "Cargo.lock" }}
          paths:
            - /nix
            - target
            - ~/.cargo

  test:
    executor: machine
    steps:
      - checkout
      - run:
          name: test and coverage upload
          environment:
            IMAGE: *image
          command: |
            docker pull $IMAGE
            docker run --security-opt seccomp=unconfined --network=host \
              -v $(pwd):/w -w /w -it $IMAGE \
              sh -c "apk add ca-certificates curl make && \
                     make coverage"
            bash <(curl -s https://codecov.io/bash)
